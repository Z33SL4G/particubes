keywords: ["particubes", "game", "mobile", "scripting", "cube", "voxel", "world"]
type: "MutableShape"
extends: "Shape"
description: A [MutableShape] is an [Object] that carries and displays a set of [Block]s. The difference with [Shape] is that [MutableShape] [Block]s can be modified.

constructors: 
  - description: "Creates a MutableShape with imported [Item]."
    arguments:
    - name: "item"
      type: "Item"
    samples:
      - code: local s = MutableShape(R.username.itemName)

properties:

functions:
    - name: "AddBlock"
      description: |
          Adds a [Block] to the [This].
          
          Returns created [Block] (or [nil] if it fails) by default. You may pass the optional parameter `getBlock` to `false` if you do not need the return value, as an optimization.
      argument-sets:
        -
          - name: "block"
            type: "Block"
        -
          - name: "paletteIndex"
            type: "integer"
          - name: "position"
            type: "Number3"
        -
          - name: "paletteIndex"
            type: "integer"
          - name: "position"
            type: "Number3"
          - name: "getBlock"
            type: "boolean"
        -
          - name: "paletteIndex"
            type: "integer"
          - name: "X"
            type: "number"
          - name: "Y"
            type: "number"
          - name: "Z"
            type: "number"
        -
          - name: "paletteIndex"
            type: "integer"
          - name: "X"
            type: "number"
          - name: "Y"
            type: "number"
          - name: "Z"
            type: "number"
          - name: "getBlock"
            type: "boolean"
      return: 
        - type: "Block"
      samples:
      - code: |
          local block = Block(1, 10, 10, 10)
          someMutableShape:AddBlock(block)

          -- AddBlock can also be called using
          -- block's palette index and coordinates:
          someMutableShape:AddBlock(1, 10, 10, 10)

          -- created block is returned:
          local newBlock = someMutableShape:AddBlock(1, 10, 10, 10)
          if newBlock ~= nil then
            -- block successfully created!
          end

          -- ⚠️
          local block = Block(1, 10, 10, 10)
          local newBlock = someMutableShape:AddBlock(block)
          -- Here `newBlock` is not the same as `block`
          -- they both have the same palette index and coordinates
          -- but `newBlock` has a parent shape while `block` doesn't.

    - name: "GetBlock"
      description: |
          Gets a [Block] from the [This]. 
          Returns [nil] if there is no [Block] at the given coordinates (i. e. if it's "air").

      arguments: 
        - name: "X"
          type: "number"
        - name: "Y"
          type: "number"
        - name: "Z"
          type: "number"
      return: 
        - type: "Block"
